{
  "name": "02. WF_CSKH_0611",
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {}
      },
      "id": "7a14fcc9-d632-4ab5-8308-05a3cf695882",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1020,
        300
      ],
      "credentials": {
        "openAiApi": {
          "id": "BpciZCOgdpJ79QO1",
          "name": "OpenAi account 23062025"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              },
              {
                "name": "file_title",
                "value": "={{ $('Set File ID').first().json.file_title }}"
              }
            ]
          }
        }
      },
      "id": "f8902c65-b407-4437-8d25-64a5f14671ce",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        3020,
        1140
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "614bf6bd-86de-4839-8c50-db565f48ceee",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        2740,
        1080
      ],
      "credentials": {
        "openAiApi": {
          "id": "BpciZCOgdpJ79QO1",
          "name": "OpenAi account 23062025"
        }
      }
    },
    {
      "parameters": {
        "content": "## Agent Tools for RAG",
        "height": 469,
        "width": 583,
        "color": 4
      },
      "id": "ce280942-60a7-4d9b-b9be-1ce1b0a65d53",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1780,
        0
      ]
    },
    {
      "parameters": {
        "content": "## Tool to Add a Google Drive File to Vector DB",
        "height": 80,
        "width": 573,
        "color": 5
      },
      "id": "aceb2b35-dbbe-465d-8566-7678e2963ced",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        20,
        480
      ]
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "a6d1e8db-c3f7-49e0-acf1-f70cd79d1519",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1140,
        800
      ],
      "executeOnce": true,
      "credentials": {
        "googleApi": {
          "id": "UFYSZcd8CgntABwS",
          "name": "GSA_N"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "authentication": "serviceAccount",
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1JOXq1vwslcTjVGi4dAHb2hMuP0S5vNrF",
          "mode": "list",
          "cachedResultName": "04. ChamSocKhanhHang",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1JOXq1vwslcTjVGi4dAHb2hMuP0S5vNrF"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "4ccbfe42-ebdb-4fab-b9df-4016dab69264",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -220,
        560
      ],
      "credentials": {
        "googleApi": {
          "id": "UFYSZcd8CgntABwS",
          "name": "GSA_N"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "authentication": "serviceAccount",
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1JOXq1vwslcTjVGi4dAHb2hMuP0S5vNrF",
          "mode": "list",
          "cachedResultName": "04. ChamSocKhanhHang",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1JOXq1vwslcTjVGi4dAHb2hMuP0S5vNrF"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "38d99495-d624-43a0-a26c-be7fb21ba9f0",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -200,
        800
      ],
      "credentials": {
        "googleApi": {
          "id": "UFYSZcd8CgntABwS",
          "name": "GSA_N"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields').item.json.sessionId }}"
      },
      "id": "27b5bfc3-c461-4ba0-982f-7a9ae84fa579",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1,
      "position": [
        1160,
        300
      ],
      "notesInFlow": false,
      "credentials": {
        "postgres": {
          "id": "vEJzSvEtz2wK5mnU",
          "name": "Postgres account 18_CSKH"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "d041fe0a-348e-4d41-9ea7-2fdfec8aba86",
      "name": "Delete Old Doc Rows",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        540,
        600
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "5Y1Oqex0loIlvr2b",
          "name": "Supabase account_CSKH"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "77d782de-169d-4a46-8a8e-a3831c04d90f",
              "name": "file_title",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "9bde4d7f-e4f3-4ebd-9338-dce1350f9eab",
              "name": "file_url",
              "value": "={{ $json.webViewLink }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e0b7371f-4cff-4a87-8233-5f2bbcae8c3e",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        280,
        600
      ]
    },
    {
      "parameters": {
        "content": "## RAG AI Agent with Chat Interface",
        "height": 464.8027193303974,
        "width": 1035.6381264595484
      },
      "id": "5fd958d9-1c56-4063-b3d3-19b48ac03ab0",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        720,
        0
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b5bbaedf-973a-4853-a50f-5c81e53f3afe",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1580,
        80
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a9a245e-f1a1-4282-bb02-a81ffe629f0f",
              "name": "chatInput",
              "value": "={{ $json?.chatInput || $json.body.chatInput }}",
              "type": "string"
            },
            {
              "id": "b80831d8-c653-4203-8706-adedfdb98f77",
              "name": "sessionId",
              "value": "={{ $json?.sessionId || $json.body.sessionId}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6dc7167f-512f-46fd-97bc-20ebace37b07",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1020,
        80
      ]
    },
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "id": "2bace261-1fa0-402d-b4ec-fa2f25f700e3",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        760,
        80
      ],
      "webhookId": "b075f751-8555-407e-bc60-d6879bd1154c"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "12",
        "authentication": "headerAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "3a1db515-1d09-445f-8fb8-fbc97e50b8d2",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        760,
        260
      ],
      "webhookId": "a8511dcc-1b5e-4b56-becb-73d3605dbf98",
      "credentials": {
        "httpHeaderAuth": {
          "id": "1Uia0CdgVhPiuIJL",
          "name": "Header Auth account_TL"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "8229529f-2093-4e09-bd92-0b7361c73447",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2160,
        540
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "0371e550-0e34-4aa8-92af-11a7a14ce33b",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2220,
        700
      ]
    },
    {
      "parameters": {
        "chunkOverlap": 100
      },
      "id": "749f5917-dfdf-4f8c-aba4-2d8f386d2710",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        3100,
        1320
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "7d7d759e-355d-4e8a-85c0-d839dc177dbc",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2420,
        780
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "=# Prompt cho AI Agent N8n - Trợ lý Tài liệu Thông minh\n\n## Vai trò và Chức năng\nBạn là một trợ lý AI chuyên nghiệp, giúp tìm kiếm và truy xuất thông tin từ kho tài liệu đa định dạng. Nhiệm vụ chính của bạn là:\n\n- Tìm kiếm thông tin chính xác từ các tài liệu văn bản (TXT, DOC, PDF)\n- Truy xuất dữ liệu từ các file bảng tính (CSV, Excel)\n- Xử lý và cung cấp link truy cập video khi được yêu cầu\n- Đảm bảo tính chính xác và đầy đủ của thông tin được cung cấp\n\n## QUY TẮC CHÍNH XÁC - QUAN TRỌNG NHẤT\n\n### 🔍 NGUYÊN TẮC ĐỌC TÀI LIỆU CHÍNH XÁC\n1. **ĐỌC KỸ TOÀN BỘ NỘI DUNG**: Không được đoán hoặc suy luận từ từ khóa\n2. **TRÍCH XUẤT CHÍNH XÁC**: Copy nguyên văn thông tin từ tài liệu, không được thay đổi\n3. **KIỂM TRA LẠI**: Đọc lại nội dung trước khi trả lời để đảm bảo chính xác 100%\n4. **KHÔNG SỬ DỤNG KIẾN THỨC CŨ**: Chỉ dựa vào nội dung tài liệu được tìm thấy\n5. **XÁC NHẬN NGUỒN**: Luôn ghi rõ thông tin lấy từ tài liệu nào\n\n### 🎯 QUY TRÌNH KIỂM TRA CHÍNH XÁC\n**BƯỚC 1**: Tìm kiếm tài liệu liên quan với từ khóa chính xác\n**BƯỚC 2**: Định vị chính xác sản phẩm/thông tin cần tìm trong tài liệu\n**BƯỚC 3**: Đọc kỹ TOÀN BỘ đoạn văn/câu chứa thông tin đó\n**BƯỚC 4**: Trích xuất NGUYÊN VĂN thông tin cần thiết (số liệu, thời gian, tên sản phẩm)\n**BƯỚC 5**: Kiểm tra lại một lần nữa: đối chiếu câu hỏi với thông tin tìm được\n**BƯỚC 6**: Ghi rõ nguồn tài liệu và vị trí thông tin\n\n**ĐẶC BIỆT CHO CÂU HỎI BẢO HÀNH**:\n- Bước 2.1: Tìm chính xác tên sản phẩm (ví dụ: \"ổ cảm điện quang\")\n- Bước 2.2: Tìm từ khóa \"bảo hành\" liên quan đến sản phẩm đó\n- Bước 2.3: Đọc nguyên câu chứa cả tên sản phẩm và thời hạn bảo hành\n- Bước 2.4: Không được lấy thông tin bảo hành của sản phẩm khác\n\n### ⚠️ CẢNH BÁO LỖI THƯỜNG GẶP\n- **KHÔNG ĐƯỢC** đọc lướt hoặc đọc sơ sài\n- **KHÔNG ĐƯỢC** thay thế số liệu (ví dụ: 12 tháng thành 6 tháng)\n- **KHÔNG ĐƯỢC** sử dụng thông tin từ tài liệu khác khi trả lời\n- **KHÔNG ĐƯỢC** kết hợp thông tin từ nhiều nguồn mà không ghi rõ\n- **KHÔNG ĐƯỢC** suy đoán thông tin không có trong tài liệu\n\n## Quy trình Xử lý Yêu cầu\n\n### Bước 1: Phân tích Yêu cầu và Kiểm tra Tiêu đề\n- Đọc kỹ câu hỏi của người dùng\n- **LUÔN KIỂM TRA TIÊU ĐỀ TÀI LIỆU TRƯỚC**: Quét qua tất cả tiêu đề để tìm tài liệu liên quan\n- Ưu tiên tìm file .mp4 có tiêu đề khớp với yêu cầu (ví dụ: \"hướng dẫn lặp quạt 3 cánh\" → tìm tiêu đề chứa \"quạt 3 cánh\", \"lặp quạt\", \"hướng dẫn lắp quạt\")\n- Nếu câu hỏi không rõ ràng, yêu cầu làm rõ thêm\n\n### Bước 2: Truy vấn Supabase Vector Store\n- **BẮT BUỘC**: Luôn thực hiện tìm kiếm trong Supabase Vector Store\n- Sử dụng từ khóa liên quan để tìm kiếm toàn diện\n- Kiểm tra tất cả kết quả trả về, bao gồm cả metadata của video\n\n### Bước 3: Kiểm tra và Xác thực Dữ liệu - **CẢI TIẾN**\n- **ĐỌC KỸ TOÀN BỘ**: Đọc từng câu, từng đoạn văn có chứa thông tin cần thiết\n- **TRÍCH XUẤT NGUYÊN VĂN**: Copy chính xác thông tin từ tài liệu\n- **KIỂM TRA SỐ LIỆU**: Đặc biệt chú ý đến các con số, thời gian, số lượng\n- **XÁC NHẬN NGÀY THÁNG**: Kiểm tra kỹ các thông tin về thời hạn, bảo hành\n- **ĐỌC LẠI MỘT LẦN NỮA**: Đảm bảo không có sai sót trước khi trả lời\n\n### Bước 4: Xử lý Đặc biệt cho Video và Hướng dẫn\n- **QUY TẮC QUAN TRỌNG**: Chỉ dựa vào TIÊU ĐỀ file .mp4 để xác định nội dung video\n- **KHÔNG XEM** được nội dung bên trong video, chỉ phân tích tiêu đề\n- **THỨ TỰ ƯU TIÊN**:\n  1. Tìm file .mp4 có tiêu đề khớp với yêu cầu → Trả link ngay lập tức\n  2. Sau đó mới tìm nội dung trong tài liệu văn bản khác\n- **VÍ DỤ**: Hỏi \"hướng dẫn lặp quạt 3 cánh\" → Tìm tiêu đề .mp4 chứa \"quạt 3 cánh\" hoặc \"lặp quạt\"\n- Kiểm tra trong file Excel/CSV có chứa URL video với tiêu đề phù hợp\n\n## Nguyên tắc Hoạt động\n\n### ✅ PHẢI LÀM\n- **LUÔN KIỂM TRA TIÊU ĐỀ TRƯỚC**: Quét toàn bộ danh sách tiêu đề tài liệu trước khi tìm kiếm\n- **ƯU TIÊN VIDEO .MP4**: Tìm file .mp4 có tiêu đề liên quan đầu tiên\n- **CHỈ DỰA VÀO TIÊU ĐỀ**: Không suy đoán nội dung video, chỉ phân tích tiêu đề file\n- **THỨ TỰ**: Video .mp4 trước → Link ngay → Sau đó mới tìm tài liệu khác\n- **ĐỌC CHÍNH XÁC**: Đọc kỹ toàn bộ nội dung liên quan trước khi trả lời\n- **TRÍCH XUẤT NGUYÊN VĂN**: Copy chính xác thông tin từ tài liệu\n- Cung cấp thông tin chính xác 100% từ nguồn dữ liệu\n- Trả về link video clickable để người dùng xem trực tiếp\n- **GHI RÕ NGUỒN**: Luôn chỉ rõ thông tin lấy từ tài liệu nào\n\n### ❌ KHÔNG ĐƯỢC LÀM\n- Bịa đặt hoặc suy diễn nội dung video từ tiêu đề\n- **KHÔNG ĐOÁN** nội dung bên trong file .mp4\n- **KHÔNG ĐỌC LƯỚT**: Phải đọc kỹ toàn bộ nội dung liên quan\n- **KHÔNG THAY ĐỔI SỐ LIỆU**: Giữ nguyên các con số từ tài liệu gốc\n- **KHÔNG SỬ DỤNG KIẾN THỨC CŨ**: Chỉ dựa vào tài liệu được tìm thấy\n- Bỏ qua việc kiểm tra tiêu đề trước khi tìm kiếm\n- Tìm tài liệu khác trước khi kiểm tra video .mp4\n- Trả lời mà không kiểm tra danh sách tiêu đề đầy đủ\n- Đưa ra thông tin không chính xác về video\n- **KHÔNG KẾT HỢP THÔNG TIN**: Mỗi câu trả lời phải có nguồn rõ ràng\n\n## Cách Phản hồi\n\n### Khi tìm thấy video .mp4 phù hợp:\n```\n🎥 **TÌM THẤY VIDEO HƯỚNG DẪN**: \n\n👉 **[Tiêu đề video]** - [Link video trực tiếp - Click để xem]\n\n📝 **Ghi chú**: Video được xác định dựa trên tiêu đề \"[tiêu đề file]\"\n\n---\n📚 **Thông tin bổ sung từ tài liệu khác** (nếu có):\n[Nội dung từ tài liệu văn bản liên quan]\n**Nguồn**: [Tên file cụ thể]\n```\n\n### Khi tìm thấy thông tin khác:\n```\nDựa trên tài liệu **[tên tài liệu cụ thể]**, tôi tìm thấy thông tin chính xác sau:\n\n**\"[Trích dẫn nguyên văn từ tài liệu]\"**\n\n[Nếu có video]: 🎥 Link video: [URL]\n\n📋 **Nguồn chính xác**: [Tên file/tài liệu] - [Vị trí trong tài liệu nếu có]\n```\n\n### Khi có thông tin số liệu cụ thể:\n```\nTheo tài liệu **[tên file]**, thông tin chính xác là:\n\n🔍 **[Câu hỏi]**: **[Trả lời nguyên văn từ tài liệu]**\n\n📝 **Trích dẫn nguyên văn**: \"[Đoạn văn chính xác từ tài liệu]\"\n\n⚠️ **Lưu ý**: Thông tin này chỉ áp dụng cho [tên sản phẩm cụ thể]\n\n📋 **Nguồn**: [Tên file cụ thể]\n```\n\n### Ví dụ cụ thể cho câu hỏi bảo hành:\n```\n🔍 **Câu hỏi**: \"ổ cảm điện quang bảo hành bao lâu?\"\n\n✅ **Cách trả lời đúng**:\nTheo tài liệu **[tên file]**, thông tin chính xác là:\n\n🛡️ **Ổ cảm điện quang được bảo hành: 12 tháng**\n\n📝 **Trích dẫn nguyên văn**: \"[Đoạn văn chính xác từ tài liệu chứa thông tin về ổ cảm điện quang và thời hạn 12 tháng]\"\n\n📋 **Nguồn**: [Tên file chứa thông tin này]\n\n❌ **TUYỆT ĐỐI KHÔNG ĐƯỢC** trả lời: \"6 tháng\" nếu tài liệu ghi \"12 tháng\"\n```\n\n### Khi không tìm thấy thông tin:\n```\nTôi đã tìm kiếm trong toàn bộ kho tài liệu nhưng không tìm thấy thông tin về [chủ đề]. \n\nBạn có thể cung cấp thêm chi tiết hoặc từ khóa khác để tôi hỗ trợ tốt hơn không?\n```\n\n### Khi cần làm rõ:\n```\nĐể tôi có thể hỗ trợ chính xác, bạn có thể làm rõ thêm về:\n- [Câu hỏi cụ thể 1]\n- [Câu hỏi cụ thể 2]\n```\n\n## Lưu ý Đặc biệt\n\n1. **KIỂM TRA TIÊU ĐỀ ĐẦU TIÊN**: Luôn quét danh sách tiêu đề tài liệu trước mọi thao tác khác\n2. **GIỚI HẠN VIDEO**: Chỉ biết nội dung video qua tiêu đề file .mp4, không xem được bên trong\n3. **THỨ TỰ XỬ LÝ**: Tiêu đề .mp4 → Link video → Tài liệu văn bản → Tổng hợp\n4. **VÍ DỤ THỰC TẾ**: \n   - Hỏi: \"hướng dẫn lặp quạt 3 cánh\"\n   - Tìm: Tiêu đề chứa \"quạt 3 cánh\", \"lặp quạt\", \"hướng dẫn quạt\"\n   - Trả về: Link video ngay lập tức\n5. **Từ khóa Matching**: So khớp từ khóa trong câu hỏi với tiêu đề file\n6. **Link Click-able**: Đảm bảo link video có thể click trực tiếp\n7. **Kiểm tra Metadata**: Xem xét metadata của file Excel/CSV chứa URL video\n8. **VÍ DỤ LỖI CẦN TRÁNH**: \n   - ❌ Tài liệu ghi \"12 tháng\" nhưng trả lời \"6 tháng\"\n   - ✅ Phải trả lời chính xác \"12 tháng\" như trong tài liệu\n   \n9. **TRƯỜNG HỢP THỰC TẾ CẦN CHÚ Ý**:\n   ```\n   🔍 Câu hỏi: \"ổ cảm điện quang bảo hành bao lâu?\"\n   \n   ❌ SAI: \"Ổ cảm điện quang được bảo hành 6 tháng\"\n   ✅ ĐÚNG: \"Theo tài liệu [tên file], ổ cảm điện quang được bảo hành 12 tháng\"\n   \n   📝 Nguyên nhân lỗi: Đọc nhầm hoặc lấy thông tin từ sản phẩm khác\n   🔧 Cách khắc phục: Đọc kỹ đoạn văn chứa từ \"ổ cảm điện quang\" và \"bảo hành\"\n   ```\n\n10. **NGUYÊN TẮC VÀNG**: Nếu không chắc chắn, đọc lại tài liệu một lần nữa\n\n## Công cụ Cần sử dụng\n- Supabase Vector Store Query Tool\n- Document Analysis Tool  \n- Excel/CSV Reader Tool\n- Video Link Extractor Tool\n\n---\n*Ghi nhớ: Tính chính xác 100% là ưu tiên tuyệt đối. Luôn đọc kỹ, trích xuất nguyên văn, và kiểm tra lại trước khi trả lời. Mọi sai sót về số liệu đều không được chấp nhận.*"
        }
      },
      "id": "475659d2-fd8f-4436-a51a-77429623d2e1",
      "name": "RAG AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1240,
        80
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "2d5d8bc1-7088-4b65-a833-301c3987bfbe"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pdf"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "=application/vnd.google-apps.spreadsheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "b69f5605-0179-4b02-9a32-e34bb085f82d",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "a605d52b-093e-47ce-bed4-6c040b465b79",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/msword",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "043262f3-55dc-40b0-af44-f2f67aae3aa9",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "291a9806-5b16-46b4-a253-4806491d92bc",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.ms-word",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 3
        }
      },
      "id": "1ceb47a7-44bb-46be-a1ab-5a3ab4c1b1e1",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1320,
        720
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "e1204833-4ffb-4335-9645-e85e95682900",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        2900,
        860
      ],
      "credentials": {
        "supabaseApi": {
          "id": "5Y1Oqex0loIlvr2b",
          "name": "Supabase account_CSKH"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "aedf77fb-b6e2-4a38-a21a-dba192e565c0",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1780,
        700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f422e2e0-381c-46ea-8f38-3f58c501d8b9",
              "name": "schema",
              "value": "={{ $('Extract from Excel').isExecuted ? $('Extract from Excel').first().json.keys().toJsonString() : $('Extract from CSV').first().json.keys().toJsonString() }}",
              "type": "string"
            },
            {
              "id": "bb07c71e-5b60-4795-864c-cc3845b6bc46",
              "name": "data",
              "value": "={{ $json.concatenated_data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2860,
        640
      ],
      "id": "e5805b54-4778-49c9-80e7-4bf5410b5779",
      "name": "Set Schema"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1780,
        880
      ],
      "id": "412d6ae7-4e96-4b64-8ffb-061a2e77c737",
      "name": "Extract from CSV"
    },
    {
      "parameters": {
        "content": "## Run Each Node Once to Set Up Database Tables",
        "height": 300,
        "width": 680,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "9689a5d7-eff2-462a-96ff-4641ebc6c166",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use this tool to fetch all available documents, including the table schema if the file is a CSV or Excel file.",
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "document_metadata",
          "mode": "list",
          "cachedResultName": "document_metadata"
        },
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        1300,
        300
      ],
      "id": "39a1f24f-b187-40b3-9cc8-f053481bc136",
      "name": "List Documents",
      "credentials": {
        "postgres": {
          "id": "vEJzSvEtz2wK5mnU",
          "name": "Postgres account 18_CSKH"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Given a file ID, fetches the text from the document.",
        "operation": "executeQuery",
        "query": "SELECT \n    string_agg(content, ' ') as document_text\nFROM documents\n  WHERE metadata->>'file_id' = $1\nGROUP BY metadata->>'file_id';",
        "options": {
          "queryReplacement": "={{ $fromAI('file_id') }}"
        }
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        1440,
        300
      ],
      "id": "cbeb40b4-502f-42b7-a828-321e33efd8e2",
      "name": "Get File Contents",
      "credentials": {
        "postgres": {
          "id": "vEJzSvEtz2wK5mnU",
          "name": "Postgres account 18_CSKH"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "documents",
        "toolDescription": "Use RAG to look up information in the knowledgebase.",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        1880,
        220
      ],
      "id": "7ae32dc6-950c-4099-a9e4-2ac613423bbc",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "5Y1Oqex0loIlvr2b",
          "name": "Supabase account_CSKH"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1980,
        340
      ],
      "id": "1bad4ea0-4547-44f3-8454-c64605b1f867",
      "name": "Embeddings OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "BpciZCOgdpJ79QO1",
          "name": "OpenAi account 23062025"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        20,
        580
      ],
      "id": "93404ed8-a966-4efd-9d30-90d32dd37841",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Kích hoạt extension pgvector\nCREATE EXTENSION IF NOT EXISTS vector;\n\n-- Tạo bảng lưu metadata của tài liệu\nCREATE TABLE document_metadata (\n    id TEXT PRIMARY KEY,\n    title TEXT,\n    url TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    schema TEXT\n);\n\n-- Tạo bảng lưu các dòng dữ liệu của tài liệu\nCREATE TABLE document_rows (\n    id SERIAL PRIMARY KEY,\n    dataset_id TEXT REFERENCES document_metadata(id),\n    row_data JSONB  -- Lưu trữ dữ liệu dòng thực tế\n);\n\n-- Tạo bảng lưu trữ tài liệu và embedding của chúng\nCREATE TABLE documents (\n  id BIGSERIAL PRIMARY KEY,\n  content TEXT,  -- Nội dung tài liệu\n  metadata JSONB,  -- Metadata của tài liệu\n  embedding VECTOR(1536)  -- 1536 là kích thước của embedding, có thể thay đổi tùy theo nhu cầu\n);\n\n-- Tạo hàm để tìm kiếm tài liệu dựa trên embedding\nCREATE FUNCTION match_documents (\n  query_embedding VECTOR(1536),\n  match_count INT DEFAULT NULL,\n  filter JSONB DEFAULT '{}'\n) RETURNS TABLE (\n  doc_id BIGINT,\n  content TEXT,\n  metadata JSONB,\n  similarity FLOAT\n)\nLANGUAGE plpgsql\nAS $$\nBEGIN\n  RETURN QUERY\n  SELECT\n    documents.id AS doc_id,  -- Đổi tên cột 'id' của bảng 'documents' thành 'doc_id'\n    documents.content,\n    documents.metadata,\n    1 - (documents.embedding <=> query_embedding) AS similarity\n  FROM documents\n  WHERE documents.metadata @> filter\n  ORDER BY documents.embedding <=> query_embedding\n  LIMIT match_count;\nEND;\n$$;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        280,
        100
      ],
      "id": "0be0958e-6442-4db3-b631-53c9b32c07aa",
      "name": "Create Documents Table and Match Function",
      "credentials": {
        "postgres": {
          "id": "vEJzSvEtz2wK5mnU",
          "name": "Postgres account 18_CSKH"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "document_rows",
        "filters": {
          "conditions": [
            {
              "keyName": "dataset_id",
              "condition": "eq",
              "keyValue": "={{ $('Set File ID').item.json.file_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        740,
        600
      ],
      "id": "d7a9414e-cc40-42c8-b46e-ad4f12a0c390",
      "name": "Delete Old Data Rows",
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "supabaseApi": {
          "id": "5Y1Oqex0loIlvr2b",
          "name": "Supabase account_CSKH"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "document_metadata",
          "mode": "list",
          "cachedResultName": "document_metadata"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Set File ID').item.json.file_id }}",
            "title": "={{ $('Set File ID').item.json.file_title }}",
            "url": "={{ $('Set File ID').item.json.file_url }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "schema",
              "displayName": "schema",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        900,
        600
      ],
      "id": "6f8c731f-37b9-4ace-9e04-7cc564cc4cf9",
      "name": "Insert Document Metadata",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "vEJzSvEtz2wK5mnU",
          "name": "Postgres account 18_CSKH"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "document_rows",
          "mode": "list",
          "cachedResultName": "document_rows"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "dataset_id": "={{ $('Set File ID').item.json.file_id }}",
            "row_data": "={{ $json.toJsonString().replaceAll(/'/g, \"''\") }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "dataset_id",
              "displayName": "dataset_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_data",
              "displayName": "row_data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2220,
        880
      ],
      "id": "c5ec73a0-b756-4624-97a7-5e56e728b31f",
      "name": "Insert Table Rows",
      "credentials": {
        "postgres": {
          "id": "vEJzSvEtz2wK5mnU",
          "name": "Postgres account 18_CSKH"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "document_metadata",
          "mode": "list",
          "cachedResultName": "document_metadata"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Set File ID').item.json.file_id }}",
            "schema": "={{ $json.schema }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "schema",
              "displayName": "schema",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3080,
        640
      ],
      "id": "a2b159c1-c4a2-49ce-b9ab-a4faec6909b5",
      "name": "Update Schema for Document Metadata",
      "credentials": {
        "postgres": {
          "id": "vEJzSvEtz2wK5mnU",
          "name": "Postgres account 18_CSKH"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Lấy hai mảng từ input trong n8n\nconst array1 = $('Aggregate1').first().json.id || [];\nconst array2 = $('Aggregate2').first().json.id || [];\n\n// Tìm các ID không trùng nhau\nconst uniqueIDs = [\n  ...array1.filter(id => !array2.includes(id)), // ID chỉ có trong array1\n  ...array2.filter(id => !array1.includes(id))  // ID chỉ có trong array2\n];\n// Chuyển đổi kết quả thành định dạng mong muốn\nconst result = uniqueIDs.map(id => ({ id }));\n\n// Trả về kết quả\nreturn result;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1060,
        1660
      ],
      "id": "839fc4b4-bda5-41d0-9cfd-60140e327a5f",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id  FROM public.document_metadata;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        320,
        1660
      ],
      "id": "46c2b210-4cbc-4a65-bc71-24847f72b090",
      "name": "Node_postgres",
      "credentials": {
        "postgres": {
          "id": "vEJzSvEtz2wK5mnU",
          "name": "Postgres account 18_CSKH"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "resource": "fileFolder",
        "returnAll": true,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "17AhhZ1lMv23PM2TEdOngMqirnCMfAeY7",
            "mode": "list",
            "cachedResultName": "04. N8n_Tro_Ly_Doc",
            "cachedResultUrl": "https://drive.google.com/drive/folders/17AhhZ1lMv23PM2TEdOngMqirnCMfAeY7"
          },
          "whatToSearch": "files",
          "includeTrashed": false
        },
        "options": {
          "fields": [
            "id"
          ]
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        680,
        1660
      ],
      "id": "8f109c2f-1bd9-4796-933c-6fcc43a29aa2",
      "name": "Node_drive",
      "alwaysOutputData": true,
      "credentials": {
        "googleApi": {
          "id": "UFYSZcd8CgntABwS",
          "name": "GSA_N"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "id"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        500,
        1660
      ],
      "id": "f1aebd0d-9b02-46a4-824f-db2586f679fb",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "id"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        860,
        1660
      ],
      "id": "43abef2c-6f7d-41e2-974f-feb02fe441f3",
      "name": "Aggregate2"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $('Loop Over Items1').item.json.id }}*"
      },
      "id": "e2b57d7c-b28e-4088-86a9-77ee807a1415",
      "name": "Delete Old Doc Rows1",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2080,
        1660
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "5Y1Oqex0loIlvr2b",
          "name": "Supabase account_CSKH"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "document_metadata",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Loop Over Items1').item.json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1900,
        1660
      ],
      "id": "61e24eba-2b5a-4324-8061-4f979548a35b",
      "name": "Delete Old Data Rows2",
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "supabaseApi": {
          "id": "5Y1Oqex0loIlvr2b",
          "name": "Supabase account_CSKH"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "document_rows",
        "filters": {
          "conditions": [
            {
              "keyName": "dataset_id",
              "condition": "eq",
              "keyValue": "={{ $json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1720,
        1660
      ],
      "id": "75578791-e411-41d6-8415-72ec41d9b78f",
      "name": "Delete Old Data Rows1",
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "supabaseApi": {
          "id": "5Y1Oqex0loIlvr2b",
          "name": "Supabase account_CSKH"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7134e92c-2e4f-49b3-a0d1-dbe856ebef2c",
              "leftValue": "={{ $('Code').item}}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1240,
        1660
      ],
      "id": "9f1ad845-12f0-4894-b84e-e887d2715c9d",
      "name": "If"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1460,
        1640
      ],
      "id": "1d0b07c0-e06d-44cf-8aa2-0767fdc3c98f",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        100,
        1660
      ],
      "id": "f9e83726-651b-44f2-b287-70007b61746b",
      "name": "Schedule Trigger",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "deleteFile",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID').item.json.file_id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2000,
        1300
      ],
      "id": "8c7ef012-8bce-4704-9a6f-f03d815a6506",
      "name": "Delete File",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "rxFyTs7otauqN2lC",
          "name": "Google Drive account 9"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "253ba4cf-be8e-402a-9b0d-df4d62322de8",
      "name": "Extract Document Text1",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1800,
        1060
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "document_metadata",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Set File ID').item.json.file_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2160,
        1300
      ],
      "id": "0f083fec-b8ee-46f7-bc98-c0da479fd710",
      "name": "Delete Old Data Rows3",
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "supabaseApi": {
          "id": "5Y1Oqex0loIlvr2b",
          "name": "Supabase account_CSKH"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://www.googleapis.com/drive/v3/files/{{ $('Set File ID').item.json.file_id }}/copy",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDriveOAuth2Api",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $json.title }}"
            },
            {
              "name": "mimeType",
              "value": "application/vnd.google-apps.document"
            }
          ]
        },
        "options": {}
      },
      "id": "21b173e7-cee5-4c6c-bcf8-ed58817a2497",
      "name": "Convert to Google Doc",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1820,
        1300
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "rxFyTs7otauqN2lC",
          "name": "Google Drive account 9"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "21651ed3-cfa6-4ef8-940b-fb734b9e4fc5",
              "leftValue": "={{ $('Set File ID').item.json.file_type }}",
              "rightValue": "video/mp4",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        940,
        820
      ],
      "id": "fa5005d5-8f38-4737-b8cc-88843e4c54ce",
      "name": "If1"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows": {
      "main": [
        [
          {
            "node": "Delete Old Data Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "RAG AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Set Schema",
            "type": "main",
            "index": 0
          },
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RAG AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from CSV",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert to Google Doc",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert to Google Doc",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert to Google Doc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          },
          {
            "node": "Insert Table Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Schema": {
      "main": [
        [
          {
            "node": "Update Schema for Document Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from CSV": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          },
          {
            "node": "Insert Table Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Documents": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get File Contents": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase Vectorstore": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Data Rows": {
      "main": [
        [
          {
            "node": "Insert Document Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Document Metadata": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Node_postgres": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Node_drive": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Node_drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Data Rows2": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Data Rows1": {
      "main": [
        [
          {
            "node": "Delete Old Data Rows2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Delete Old Data Rows1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Node_postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete File": {
      "main": [
        [
          {
            "node": "Delete Old Data Rows3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text1": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Data Rows3": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to Google Doc": {
      "main": [
        [
          {
            "node": "Delete File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a9045c01-9c43-4cb0-a28e-08533dbb95cb",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "94a383c02457267bcc44878635a0fa02b7d3206c5479bfc8890faa812e2bbd97"
  },
  "id": "7NPTdTbMt1JcEX0o",
  "tags": []
}